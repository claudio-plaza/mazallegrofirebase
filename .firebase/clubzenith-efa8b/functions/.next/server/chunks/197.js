"use strict";exports.id=197,exports.ids=[197],exports.modules={29752:(e,o,i)=>{i.d(o,{Ol:()=>l,SZ:()=>d,Zb:()=>t,aY:()=>c,eW:()=>m,ll:()=>s});var r=i(10326),n=i(17577),a=i(51223);let t=n.forwardRef(({className:e,...o},i)=>r.jsx("div",{ref:i,className:(0,a.cn)("rounded-lg border bg-card text-card-foreground shadow-sm",e),...o}));t.displayName="Card";let l=n.forwardRef(({className:e,...o},i)=>r.jsx("div",{ref:i,className:(0,a.cn)("flex flex-col space-y-1.5 p-6",e),...o}));l.displayName="CardHeader";let s=n.forwardRef(({className:e,...o},i)=>r.jsx("div",{ref:i,className:(0,a.cn)("text-2xl font-semibold leading-none tracking-tight",e),...o}));s.displayName="CardTitle";let d=n.forwardRef(({className:e,...o},i)=>r.jsx("div",{ref:i,className:(0,a.cn)("text-sm text-muted-foreground",e),...o}));d.displayName="CardDescription";let c=n.forwardRef(({className:e,...o},i)=>r.jsx("div",{ref:i,className:(0,a.cn)("p-6 pt-0",e),...o}));c.displayName="CardContent";let m=n.forwardRef(({className:e,...o},i)=>r.jsx("div",{ref:i,className:(0,a.cn)("flex items-center p-6 pt-0",e),...o}));m.displayName="CardFooter"},41190:(e,o,i)=>{i.d(o,{I:()=>t});var r=i(10326),n=i(17577),a=i(51223);let t=n.forwardRef(({className:e,type:o,value:i,...n},t)=>r.jsx("input",{type:o,value:null==i?"":i,className:(0,a.cn)("flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",e),ref:t,...n}));t.displayName="Input"},44794:(e,o,i)=>{i.d(o,{_:()=>d});var r=i(10326),n=i(17577),a=i(34478),t=i(79360),l=i(51223);let s=(0,t.j)("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"),d=n.forwardRef(({className:e,...o},i)=>r.jsx(a.f,{ref:i,className:(0,l.cn)(s(),e),...o}));d.displayName=a.f.displayName},35342:(e,o,i)=>{i.d(o,{$g:()=>r,D1:()=>l,Fl:()=>D,GD:()=>x,NN:()=>w,S:()=>S,UV:()=>c,VV:()=>L,ZU:()=>N,a6:()=>d,fk:()=>z,ie:()=>j,ms:()=>R,pO:()=>$,rX:()=>s,yP:()=>b,z5:()=>O,z_:()=>t});var r,n,a,t,l,s,d,c,m=i(27256),f=i(94629),u=i(88206),p=i(2555);let g=m.z.preprocess(e=>{if("string"==typeof e){let o=(0,f.D)(e);if((0,u.J)(o))return o}return e instanceof Date&&(0,u.J)(e),e},m.z.date({invalid_type_error:"Fecha inv\xe1lida."})),z=12,b=2;(function(e){e.CONYUGE="Conyuge",e.HIJO_A="Hijo/a",e.PADRE_MADRE="Padre/Madre"})(r||(r={})),function(e){e.PENDIENTE="Pendiente",e.APROBADO="Aprobado",e.RECHAZADO="Rechazado"}(n||(n={})),function(e){e.BORRADOR="Borrador",e.ENVIADA="Enviada",e.EN_REVISION="En Revisi\xf3n",e.APROBADA="Aprobada",e.RECHAZADA="Rechazada"}(a||(a={})),function(e){e.NINGUNO="Ninguno",e.PENDIENTE="Pendiente",e.APROBADO="Aprobado",e.RECHAZADO="Rechazado"}(t||(t={})),function(e){e.ACTIVO="Activo",e.INACTIVO="Inactivo"}(l||(l={})),function(e){e.PENDIENTE="Pendiente",e.APROBADO="Aprobado",e.RECHAZADO="Rechazada",e.PENDIENTE_ELIMINACION="Pendiente Eliminaci\xf3n"}(s||(s={})),function(e){e.BORRADOR="Borrador",e.ENVIADA="Enviada",e.PROCESADA="Procesada",e.CANCELADA_SOCIO="Cancelada por Socio",e.CANCELADA_ADMIN="Cancelada por Admin",e.VENCIDA="Vencida"}(d||(d={})),function(e){e.INFO="info",e.ALERTA="alerta",e.EVENTO="evento"}(c||(c={}));let D={typeError:"Debe seleccionar un archivo de imagen o PDF.",sizeError:"El archivo DNI no debe exceder 5MB.",mimeTypeError:"Tipo de archivo inv\xe1lido. Solo se permiten PNG, JPG, o PDF para DNI.",mimeTypes:["image/png","image/jpeg","application/pdf"]},N={typeError:"Debe seleccionar un archivo de imagen.",sizeError:"La foto de perfil no debe exceder 5MB.",mimeTypeError:"Tipo de archivo inv\xe1lido. Solo se permiten PNG o JPG para foto de perfil.",mimeTypes:["image/png","image/jpeg"]},E=e=>m.z.any().refine(e=>!e||"string"==typeof e||!("undefined"!=typeof FileList&&e instanceof FileList)||!(e.length>0)||e[0].size<=5242880,{message:e.sizeError}).refine(o=>!o||"string"==typeof o||!("undefined"!=typeof FileList&&o instanceof FileList)||!(o.length>0)||e.mimeTypes.includes(o[0].type),{message:e.mimeTypeError}),v=(e,o)=>E(e).refine(e=>null!=e&&!!("string"==typeof e&&e.length>0||"undefined"!=typeof FileList&&e instanceof FileList&&e.length>0),{message:o}),A=e=>E(e).nullable().optional(),x=m.z.object({apellido:m.z.string().min(2,"Apellido es requerido."),nombre:m.z.string().min(2,"Nombre es requerido."),fechaNacimiento:g.refine(e=>e<=(0,p.e)(new Date,18),{message:"Debe ser mayor de 18 a\xf1os."}),dni:m.z.string().regex(/^\d{7,8}$/,"DNI debe tener 7 u 8 d\xedgitos num\xe9ricos."),empresa:m.z.string().min(1,"Empresa / Sindicato es requerido."),telefono:m.z.string().min(10,"Tel\xe9fono debe tener al menos 10 caracteres num\xe9ricos.").regex(/^\d+$/,"Tel\xe9fono solo debe contener n\xfameros."),direccion:m.z.string().min(5,"Direcci\xf3n es requerida."),email:m.z.string().email("Email inv\xe1lido."),password:m.z.string().min(6,"Contrase\xf1a debe tener al menos 6 caracteres."),confirmPassword:m.z.string(),fotoDniFrente:v(D,"Se requiere foto del DNI (frente)."),fotoDniDorso:v(D,"Se requiere foto del DNI (dorso)."),fotoPerfil:v(N,"Se requiere foto de perfil."),fotoCarnet:A(N),aceptaTerminos:m.z.boolean().refine(e=>!0===e,{message:"Debe aceptar el reglamento interno para registrarse."})}).refine(e=>e.password===e.confirmPassword,{message:"Las contrase\xf1as no coinciden.",path:["confirmPassword"]}),y=m.z.object({apellido:m.z.string().min(2,"Apellido es requerido."),nombre:m.z.string().min(2,"Nombre es requerido."),fechaNacimiento:g.refine(e=>e<=(0,p.e)(new Date,18),{message:"Debe ser mayor de 18 a\xf1os."}),dni:m.z.string().regex(/^\d{7,8}$/,"DNI debe tener 7 u 8 d\xedgitos num\xe9ricos."),empresa:m.z.string().min(1,"Empresa / Sindicato es requerido."),telefono:m.z.string().min(10,"Tel\xe9fono debe tener al menos 10 caracteres num\xe9ricos.").regex(/^\d+$/,"Tel\xe9fono solo debe contener n\xfameros."),direccion:m.z.string().min(5,"Direcci\xf3n es requerida."),email:m.z.string().email("Email inv\xe1lido."),fotoDniFrente:v(D,"Se requiere foto del DNI (frente)."),fotoDniDorso:v(D,"Se requiere foto del DNI (dorso)."),fotoPerfil:v(N,"Se requiere foto de perfil."),fotoCarnet:A(N)}),q=m.z.object({id:m.z.string().optional(),apellido:m.z.string().min(2,"Apellido es requerido."),nombre:m.z.string().min(2,"Nombre es requerido."),fechaNacimiento:g.refine(e=>!!e,"La fecha de nacimiento es requerida."),dni:m.z.string().regex(/^\d{7,8}$/,"DNI debe tener 7 u 8 d\xedgitos num\xe9ricos."),fotoDniFrente:v(D,"Se requiere foto del DNI (frente)."),fotoDniDorso:v(D,"Se requiere foto del DNI (dorso)."),fotoPerfil:v(N,"Se requiere foto de perfil."),fotoCarnet:A(N),direccion:m.z.string().min(5,"Direcci\xf3n es requerida.").optional().or(m.z.literal("")),telefono:m.z.string().min(10,"Tel\xe9fono debe tener al menos 10 caracteres num\xe9ricos.").regex(/^\d+$/,"Tel\xe9fono solo debe contener n\xfameros.").optional().or(m.z.literal("")),email:m.z.string().email("Email inv\xe1lido.").optional().or(m.z.literal("")),relacion:m.z.enum(Object.values(r)),aptoMedico:m.z.custom().optional(),estadoValidacion:m.z.nativeEnum(n).optional()}),I=q.extend({relacion:m.z.literal("Conyuge")}),h=q.extend({relacion:m.z.literal("Hijo/a")}),C=q.extend({relacion:m.z.literal("Padre/Madre")}),P=m.z.object({conyuge:I.optional().nullable(),hijos:m.z.array(h).max(z,`No puede agregar m\xe1s de ${z} hijos.`).optional(),padres:m.z.array(C).max(b,`No puede agregar m\xe1s de ${b} padres.`).optional()}),R=m.z.object({tipoGrupoFamiliar:m.z.enum(["conyugeEHijos","padresMadres"],{required_error:"Debe seleccionar un tipo de grupo familiar."}),familiares:P});y.merge(m.z.object({familiares:P}));let T=m.z.object({id:m.z.string().optional(),nombre:m.z.string().min(1,"Nombre es requerido."),apellido:m.z.string().min(1,"Apellido es requerido."),dni:m.z.string().regex(/^\d{7,8}$/,"DNI debe tener 7 u 8 d\xedgitos."),fechaNacimiento:g.refine(e=>!!e,"La fecha de nacimiento es requerida."),ingresado:m.z.boolean().default(!1),metodoPago:m.z.enum(["Efectivo","Transferencia","Caja"]).nullable().optional(),aptoMedico:m.z.custom().optional().nullable(),esDeCumpleanos:m.z.boolean().optional()}),j=m.z.object({id:m.z.string().default(()=>`invd-${Date.now().toString(36)}`),idSocioTitular:m.z.string({required_error:"ID del socio titular es requerido."}),nombreSocioTitular:m.z.string({required_error:"Nombre del socio titular es requerido."}),fecha:m.z.string({required_error:"La fecha es obligatoria (ISO date string)."}).refine(e=>(0,u.J)((0,f.D)(e)),{message:"Fecha inv\xe1lida."}),listaInvitadosDiarios:m.z.array(T).min(1,"Debe agregar al menos un invitado."),estado:m.z.nativeEnum(d).default("Borrador"),fechaCreacion:m.z.date().default(()=>new Date),fechaUltimaModificacion:m.z.date().default(()=>new Date),titularIngresadoEvento:m.z.boolean().default(!1),ingresosMiembros:m.z.array(m.z.string()).optional()}),S=m.z.object({nombre:m.z.string().min(2,"Nombre es requerido."),apellido:m.z.string().min(2,"Apellido es requerido."),fechaNacimiento:g.refine(e=>!!e,"La fecha de nacimiento es requerida."),dni:m.z.string().regex(/^\d{7,8}$/,"DNI debe tener 7 u 8 d\xedgitos num\xe9ricos."),empresa:m.z.string().min(1,"Empresa / Sindicato es requerido."),telefono:m.z.string().min(10,"Tel\xe9fono debe tener al menos 10 caracteres num\xe9ricos.").regex(/^\d+$/,"Tel\xe9fono solo debe contener n\xfameros.").optional().or(m.z.literal("")),direccion:m.z.string().min(5,"Direcci\xf3n es requerida.").optional().or(m.z.literal("")),email:m.z.string().email("Email inv\xe1lido.").optional().or(m.z.literal("")),fotoDniFrente:v(D,"Se requiere foto del DNI (frente)."),fotoDniDorso:v(D,"Se requiere foto del DNI (dorso)."),fotoPerfil:v(N,"Se requiere foto de perfil."),fotoCarnet:A(N)});S.extend({id:m.z.string().optional(),estadoAdherente:m.z.nativeEnum(l),estadoSolicitud:m.z.nativeEnum(s),motivoRechazo:m.z.string().optional().nullable(),aptoMedico:m.z.custom()});let O=m.z.object({precioInvitadoDiario:m.z.number().min(0,"El precio debe ser cero o mayor.").default(0),precioInvitadoCumpleanos:m.z.number().min(0,"El precio debe ser cero o mayor.").default(0)}),w=m.z.object({id:m.z.string().default(()=>`nov-${Date.now().toString(36)}`),titulo:m.z.string().min(5,"El t\xedtulo debe tener al menos 5 caracteres."),contenido:m.z.string().min(10,"El contenido debe tener al menos 10 caracteres."),fechaCreacion:m.z.date().default(()=>new Date),fechaVencimiento:g.nullable().optional(),activa:m.z.boolean().default(!0),tipo:m.z.nativeEnum(c).default("info")}),F=m.z.object({id:m.z.string().optional(),nombre:m.z.string().min(2,"Nombre es requerido."),apellido:m.z.string().min(2,"Apellido es requerido."),dni:m.z.string().regex(/^\d{7,8}$/,"DNI debe tener 7 u 8 d\xedgitos."),fechaNacimiento:g,relacion:m.z.nativeEnum(r,{required_error:"Relaci\xf3n es requerida."}),telefono:m.z.string().min(10,"Tel\xe9fono debe tener al menos 10 caracteres num\xe9ricos.").regex(/^\d+$/,"Tel\xe9fono solo debe contener n\xfameros.").optional().or(m.z.literal("")),email:m.z.string().email("Email inv\xe1lido.").optional().or(m.z.literal("")),direccion:m.z.string().min(5,"Direcci\xf3n es requerida.").optional().or(m.z.literal("")),fotoPerfil:A(N).nullable(),fotoDniFrente:A(D).nullable(),fotoDniDorso:A(D).nullable(),fotoCarnet:A(N).nullable(),aptoMedico:m.z.custom().optional()}),$=m.z.object({apellido:m.z.string().min(2,"Apellido es requerido."),nombre:m.z.string().min(2,"Nombre es requerido."),fechaNacimiento:g.optional().refine(e=>!e||e<=(0,p.e)(new Date,18),{message:"El titular debe ser mayor de 18 a\xf1os."}),dni:m.z.string().regex(/^\d{7,8}$/,"DNI debe tener 7 u 8 d\xedgitos num\xe9ricos."),empresa:m.z.string().min(1,"Empresa / Sindicato es requerido."),telefono:m.z.string().min(10,"Tel\xe9fono debe tener al menos 10 caracteres.").regex(/^\d+$/,"Tel\xe9fono solo debe contener n\xfameros."),direccion:m.z.string().min(5,"Direcci\xf3n es requerida."),email:m.z.string().email("Email inv\xe1lido."),estadoSocio:m.z.enum(["Activo","Inactivo","Pendiente Validacion"],{required_error:"El estado del socio es requerido."}),tipoGrupoFamiliar:m.z.enum(["conyugeEHijos","padresMadres"],{errorMap:(e,o)=>({message:"Debe seleccionar un tipo de grupo si va a agregar familiares."})}).optional(),grupoFamiliar:m.z.array(F).optional(),fotoUrl:m.z.string().url("URL de foto inv\xe1lida.").optional().nullable(),fotoPerfil:A(N).nullable(),fotoDniFrente:A(D),fotoDniDorso:A(D),fotoCarnet:A(N)}),L=$.extend({fechaNacimiento:g.refine(e=>e<=(0,p.e)(new Date,18),{message:"El titular debe ser mayor de 18 a\xf1os."})})},73881:(e,o,i)=>{i.r(o),i.d(o,{default:()=>n});var r=i(66621);let n=e=>[{type:"image/x-icon",sizes:"16x16",url:(0,r.fillMetadataSegment)(".",e.params,"favicon.ico")+""}]}};